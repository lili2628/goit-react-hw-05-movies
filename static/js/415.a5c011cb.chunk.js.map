{"version":3,"file":"static/js/415.a5c011cb.chunk.js","mappings":"uNAGaA,EAAOC,EAAAA,EAAAA,GAAH,uIAQJC,EAAYD,EAAAA,EAAAA,GAAH,8MAUTE,GAAYF,EAAAA,EAAAA,GAAOG,EAAAA,GAAPH,CAAH,6OAgBTI,EAAWJ,EAAAA,EAAAA,IAAH,kHAORK,EAAYL,EAAAA,EAAAA,EAAH,8I,SCNtB,MAlCA,YAAiC,IAAXM,EAAU,EAAVA,OACdC,GAAWC,EAAAA,EAAAA,MAIjB,OACE,+BACE,SAACT,EAAD,UACGO,EAAOG,KAAI,YAAgD,IAA7CC,EAA4C,EAA5CA,GAAIC,EAAwC,EAAxCA,MAAOC,EAAiC,EAAjCA,cAAeC,EAAkB,EAAlBA,YACvC,OAAIA,GAEA,SAACZ,EAAD,WACE,UAACC,EAAD,CAAWY,GAAE,kBAAaJ,GAAMK,MAAO,CAAEC,KAAMT,GAA/C,WACE,SAACH,EAAD,CAAUa,IAXP,mCAWuBC,OAAOL,GAAcM,IAAI,MACnD,SAACd,EAAD,iBAAYM,QAAZ,IAAYA,EAAAA,EAASC,QAHTF,IAShB,SAACT,EAAD,WACE,UAACC,EAAD,CAAWY,GAAE,kBAAaJ,GAAMK,MAAO,CAAEC,KAAMT,GAA/C,WACE,SAACH,EAAD,CAAUa,IAnBV,oFAmBwBE,IAAI,MAC5B,SAACd,EAAD,iBAAYM,QAAZ,IAAYA,EAAAA,EAASC,QAHTF,EAQrB,OAIR,C,8ECjBD,UAdA,WACC,OAA4BU,EAAAA,EAAAA,UAAS,IAArC,eAAOd,EAAP,KAAee,EAAf,KAMC,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MAAoBC,KAAKH,EAC1B,GAAE,KAGD,+BACE,SAAC,IAAD,CAAWf,OAAQA,KAGxB,C,+LCfDmB,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAW,mCAGJH,EAAiB,mCAAG,sGACRE,EAAAA,EAAAA,IAAA,qCAAwCC,IADhC,uBACvBC,EADuB,EACvBA,KADuB,kBAExBA,EAAKC,SAFmB,2CAAH,qDAKjBC,EAAe,mCAAG,WAAMC,GAAN,yFACNL,EAAAA,EAAAA,IAAA,iBAAoBK,EAApB,oBAAuCJ,IADjC,uBACrBC,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfI,EAAY,mCAAG,WAAMC,GAAN,yFACHP,EAAAA,EAAAA,IAAA,gCAAmCC,EAAnC,kBAAqDM,IADlD,uBAClBL,EADkB,EAClBA,KADkB,kBAEnBA,EAAKC,SAFc,2CAAH,sDAKZK,EAAe,mCAAG,WAAMH,GAAN,yFACNL,EAAAA,EAAAA,IAAA,iBAAoBK,EAApB,4BAA+CJ,IADzC,uBACrBC,EADqB,EACrBA,KADqB,kBAEtBA,EAAKO,MAFiB,2CAAH,sDAKfC,EAAe,mCAAG,WAAML,GAAN,yFACNL,EAAAA,EAAAA,IAAA,iBAAoBK,EAApB,4BAA+CJ,IADzC,uBACrBC,EADqB,EACrBA,KADqB,kBAEtBA,EAAKC,SAFiB,2CAAH,qD","sources":["components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","pages/Home.jsx","services/API.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  margin-bottom: 40px;\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n  gap: 20px;\n`;\n\nexport const MovieItem = styled.li`\n  flex-basis: calc((100% - 100px) / 5);\n  max-height: 100%;\n  min-height: 300px;\n  border-radius: 8px;\n  overflow: hidden;\n  background-color: #d9d2e9;\n  box-shadow: #b3abc4;\n`;\n\nexport const MovieLink = styled(Link)`\n  object-fit: cover;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  height: 100%;\n\n  &:hover img {\n    filter: grayscale(0);\n  }\n\n  &:hover p {\n    color: #a64d79;\n  }\n`;\n\nexport const MovieImg = styled.img`\n  margin-bottom: 5px;\n  filter: grayscale(0.4);\n\n  transition: all 200ms ease-in-out;\n`;\n\nexport const MovieName = styled.p`\n  height: 100%;\n  padding: 10px 8px;\n  font-weight: 500;\n  font-size: 18px;\n  transition: all 200ms ease-in-out;\n`;","import { useLocation } from 'react-router-dom';\nimport { List, MovieItem, MovieLink, MovieImg, MovieName } from './MovieList.styled';\nimport PropTypes from 'prop-types';\n\nfunction MovieList ({ movies }) {\n  const location = useLocation();\n  const imgBaseUrl = 'https://image.tmdb.org/t/p/w500/';\n  const noImage = 'https://endlessicons.com/wp-content/uploads/2012/11/image-holder-icon-614x460.png';\n\n  return (\n    <>\n      <List>\n        {movies.map(({ id, title, original_name, poster_path }) => { \n          if (poster_path) {\n            return (\n              <MovieItem key={id}>\n                <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n                  <MovieImg src={imgBaseUrl.concat(poster_path)} alt=\"\" />\n                  <MovieName>{title ?? original_name}</MovieName>\n                </MovieLink>\n              </MovieItem>\n            );\n          } else {\n            return (\n              <MovieItem key={id}>\n                <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n                  <MovieImg src={noImage} alt=\"\" />\n                  <MovieName>{title ?? original_name}</MovieName>\n                </MovieLink>\n              </MovieItem>\n            );\n        }\n        })}\n        </List>\n      </>\n  );\n}\n\nexport default MovieList;\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string,\n    original_name: PropTypes.string,\n    poster_path: PropTypes.string,\n  })),\n};","import { useState, useEffect } from 'react';\nimport { getTrendingMovies } from '../services/API';\nimport MovieList from 'components/MovieList/MovieList';\n\n\nfunction Home() {\n const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    getTrendingMovies().then(setMovies);\n  }, []);\n\n  return (\n    <>\n      <MovieList movies={movies} />\n    </>\n  );\n}\n\nexport default Home;","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst BASE_KEY = '4c022d061e1dc709d01d1f05bf0b4752';\n\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`/trending/all/week?api_key=${BASE_KEY}`);\n  return data.results;\n};\n\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}?api_key=${BASE_KEY}`);\n  return data;\n};\n\nexport const searchMovies = async query => {\n  const { data } = await axios.get(`/search/movie?api_key=${BASE_KEY}&query=${query}`);\n  return data.results;\n};\n\nexport const getMovieCredits = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/credits?api_key=${BASE_KEY}`);\n  return data.cast;\n};\n\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/reviews?api_key=${BASE_KEY}`);\n  return data.results;\n};"],"names":["List","styled","MovieItem","MovieLink","Link","MovieImg","MovieName","movies","location","useLocation","map","id","title","original_name","poster_path","to","state","from","src","concat","alt","useState","setMovies","useEffect","getTrendingMovies","then","axios","BASE_KEY","data","results","getMovieDetails","movieId","searchMovies","query","getMovieCredits","cast","getMovieReviews"],"sourceRoot":""}