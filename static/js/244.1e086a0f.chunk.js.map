{"version":3,"file":"static/js/244.1e086a0f.chunk.js","mappings":"qPAEaA,EAAOC,EAAAA,EAAAA,GAAH,mFAQJC,GAFOD,EAAAA,EAAAA,GAAH,sBAEKA,EAAAA,EAAAA,EAAH,6FAMNE,EAAOF,EAAAA,EAAAA,EAAH,8F,SCiBjB,EA5BgB,WACd,OAA8BG,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAQR,IANAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBH,GACbI,KAAKL,EACT,GAAE,CAACC,IAGCF,EAIL,OACE,UAACL,EAAD,WACsB,IAAnBK,EAAQO,SAAgB,mCAExBP,EAAQQ,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,QAASC,EAAhB,EAAgBA,OAAhB,OACX,2BACE,SAACd,EAAD,UAASc,KACT,SAACb,EAAD,UAAOY,MAFAD,EADE,MAQlB,C,+LC7BDG,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAW,mCAGJC,EAAiB,mCAAG,sGACRF,EAAAA,EAAAA,IAAA,qCAAwCC,IADhC,uBACvBE,EADuB,EACvBA,KADuB,kBAExBA,EAAKC,SAFmB,2CAAH,qDAKjBC,EAAe,mCAAG,WAAMf,GAAN,yFACNU,EAAAA,EAAAA,IAAA,iBAAoBV,EAApB,oBAAuCW,IADjC,uBACrBE,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfG,EAAY,mCAAG,WAAMC,GAAN,yFACHP,EAAAA,EAAAA,IAAA,gCAAmCC,EAAnC,kBAAqDM,IADlD,uBAClBJ,EADkB,EAClBA,KADkB,kBAEnBA,EAAKC,SAFc,2CAAH,sDAKZI,EAAe,mCAAG,WAAMlB,GAAN,yFACNU,EAAAA,EAAAA,IAAA,iBAAoBV,EAApB,4BAA+CW,IADzC,uBACrBE,EADqB,EACrBA,KADqB,kBAEtBA,EAAKM,MAFiB,2CAAH,sDAKfhB,EAAe,mCAAG,WAAMH,GAAN,yFACNU,EAAAA,EAAAA,IAAA,iBAAoBV,EAApB,4BAA+CW,IADzC,uBACrBE,EADqB,EACrBA,KADqB,kBAEtBA,EAAKC,SAFiB,2CAAH,qD","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","services/API.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n`;\n\nexport const Item = styled.li``;\n\nexport const Author = styled.p`\n  margin-bottom: 8px;\n  font-size: 22px;\n  color: var(--accent);\n`;\n\nexport const Text = styled.p`\n  font-size: 16px;\n  color: var(--secondary);\n  line-height: 1.68;\n`;","import { getMovieReviews } from 'services/API';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { List, Author, Text } from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieReviews(movieId)\n      .then(setReviews);\n  }, [movieId]);\n\n\n  if (!reviews) {\n    return;\n  }\n\n  return (\n    <List>\n      {reviews.length === 0 && <p>Nothing</p>}\n\n      {reviews.map(({ id, content, author }) => (\n        <li key={id}>\n          <Author>{author}</Author>\n          <Text>{content}</Text>\n        </li>\n      ))}\n    </List>\n  );\n};\n\nexport default Reviews;","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst BASE_KEY = '4c022d061e1dc709d01d1f05bf0b4752';\n\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`/trending/all/week?api_key=${BASE_KEY}`);\n  return data.results;\n};\n\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}?api_key=${BASE_KEY}`);\n  return data;\n};\n\nexport const searchMovies = async query => {\n  const { data } = await axios.get(`/search/movie?api_key=${BASE_KEY}&query=${query}`);\n  return data.results;\n};\n\nexport const getMovieCredits = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/credits?api_key=${BASE_KEY}`);\n  return data.cast;\n};\n\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/reviews?api_key=${BASE_KEY}`);\n  return data.results;\n};"],"names":["List","styled","Author","Text","useState","reviews","setReviews","movieId","useParams","useEffect","getMovieReviews","then","length","map","id","content","author","axios","BASE_KEY","getTrendingMovies","data","results","getMovieDetails","searchMovies","query","getMovieCredits","cast"],"sourceRoot":""}