{"version":3,"file":"static/js/93.f74b1ef3.chunk.js","mappings":"qPAEaA,EAAOC,EAAAA,EAAAA,GAAH,kIAQJC,EAAOD,EAAAA,EAAAA,GAAH,8CAIJE,EAAMF,EAAAA,EAAAA,IAAH,sEAKHG,EAAOH,EAAAA,EAAAA,EAAH,oEAKJI,EAAYJ,EAAAA,EAAAA,EAAH,iD,SCiBtB,EApCa,WACX,OAAwBK,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAaR,IAVAE,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAgBH,GACXI,MAAK,YAAe,IAAZN,EAAW,EAAXA,KACHC,EAAQD,EACZ,IACAO,OAAM,SAAAC,GACFC,QAAQC,IAAIF,EAChB,GACT,GAAE,CAACN,IAECF,EAIL,OACE,UAACP,EAAD,WACmB,IAAhBO,EAAKW,SAAgB,mCAErBX,EAAKY,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OACR,UAACrB,EAAD,YACE,SAACC,EAAD,CAAKqB,IAtBM,mCAsBUC,OAAOJ,GAAeK,IAAI,MAC/C,4BACE,SAACtB,EAAD,UAAOkB,KACP,SAACjB,EAAD,UAAYkB,SAJLH,EADH,MAWf,C,sBCvCD,SAASO,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOrB,GAEP,YADAe,EAAOf,EAET,CACIoB,EAAKE,KACPR,EAAQO,GAERE,QAAQT,QAAQO,GAAOvB,KAAKkB,EAAOC,EAEvC,CACe,SAASO,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACTC,EAAOC,UACT,OAAO,IAAIN,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMY,EAAGK,MAAMJ,EAAME,GACzB,SAASZ,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CACA,SAASJ,EAAOc,GACdnB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASc,EACnE,CACAf,OAAMgB,EACR,GACF,CACF,C,uJC7BMC,EAAM,+BACNC,EAAW,mCAAjB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,EAAAA,EAAAA,IAAAA,MAAf,2GAA0BC,EAA1B,+BAAgC,GAAIC,EAApC,+BAA6C,CAAC,EAA9C,SACyBC,MAAMF,EAAKC,GADpC,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMlB,QAAQR,OACN,IAAI2B,MAAM,kDALlB,2GASO,SAASC,EAAkBC,GAChC,OAAOT,EAAW,GAAD,OACZF,EADY,uCACsBC,EADtB,iBACuCU,GAEzD,CAEM,SAASC,EAAaC,GAC3B,OAAOX,EAAW,GAAD,OACZF,EADY,iCACgBC,EADhB,kBACkCY,GAEpD,CAEM,SAASC,EAAgBrD,GAC9B,OAAOyC,EAAW,GAAD,OAAIF,EAAJ,kBAAiBvC,EAAjB,oBAAoCwC,GACtD,CAEM,SAASrC,EAAgBH,GAC9B,OAAOyC,EAAW,GAAD,OAAIF,EAAJ,kBAAiBvC,EAAjB,4BAA4CwC,GAC9D,CAEM,SAASc,EAAgBtD,EAASkD,GACvC,OAAOT,EAAW,GAAD,OACZF,EADY,kBACCvC,EADD,4BAC4BwC,EAD5B,iBAC6CU,GAE/D,C","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","services/API.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  margin-top: 30px;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 30px 10px;\n  justify-content: center;\n`;\n\nexport const Item = styled.li`\n  flex-basis: 150px;\n`;\n\nexport const Img = styled.img`\n  margin-bottom: 5px;\n  border-radius: 4px;\n`;\n\nexport const Name = styled.p`\n  margin-bottom: 5px;\n  font-weight: 500;\n`;\n\nexport const Character = styled.p`\n  color: var(--accent);\n`;","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCredits } from 'services/API';\nimport { List, Item, Img, Name, Character } from './Cast.styled';\n\nconst Cast = () => {\n  const [cast, setCast] = useState(null);\n  const { movieId } = useParams();\n  const imgBaseUrl = 'https://image.tmdb.org/t/p/w500/';\n\n  useEffect(() => {\n      getMovieCredits(movieId)\n          .then(({ cast }) => {\n                setCast(cast);\n           })\n           .catch(error => {\n                console.log(error);\n           });\n  }, [movieId]);\n\n  if (!cast) {\n    return;\n  }\n\n  return (\n    <List>\n      {cast.length === 0 && <p>Nothing</p>}\n\n      {cast.map(({ id, profile_path, name, character }) => (\n        <Item key={id}>\n          <Img src={imgBaseUrl.concat(profile_path)} alt=\"\" />\n          <div>\n            <Name>{name}</Name>\n            <Character>{character}</Character>\n          </div>\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nexport default Cast;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","const URL = 'https://api.themoviedb.org/3';\nconst BASE_KEY = '4c022d061e1dc709d01d1f05bf0b4752';\n\nasync function apiService(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(\n        new Error('The resource you requested could not be found'),\n      );\n}\n\nexport function getTrendingMovies(page) {\n  return apiService(\n    `${URL}/trending/movie/day?api_key=${BASE_KEY}&page=${page}`,\n  );\n}\n\nexport function searchMovies(query) {\n  return apiService(\n    `${URL}/search/movie?api_key=${BASE_KEY}&query=${query}`,\n  );\n}\n\nexport function getMovieDetails(movieId) {\n  return apiService(`${URL}/movie/${movieId}?api_key=${BASE_KEY}`);\n}\n\nexport function getMovieCredits(movieId) {\n  return apiService(`${URL}/movie/${movieId}/credits?api_key=${BASE_KEY}`);\n}\n\nexport function getMovieReviews(movieId, page) {\n  return apiService(\n    `${URL}/movie/${movieId}/reviews?api_key=${BASE_KEY}&page=${page}`,\n  );\n}"],"names":["List","styled","Item","Img","Name","Character","useState","cast","setCast","movieId","useParams","useEffect","getMovieCredits","then","catch","error","console","log","length","map","id","profile_path","name","character","src","concat","alt","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","URL","BASE_KEY","apiService","url","config","fetch","response","ok","json","Error","getTrendingMovies","page","searchMovies","query","getMovieDetails","getMovieReviews"],"sourceRoot":""}