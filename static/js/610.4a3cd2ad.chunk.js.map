{"version":3,"file":"static/js/610.4a3cd2ad.chunk.js","mappings":"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","sources":["components/Card/Card.styled.jsx","components/Card/Card.jsx","pages/MovieDetails.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","services/API.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  gap: 40px;\n`;\n\nexport const Img = styled.img`\n  border-radius: 4px;\n  box-shadow: var(--main-shadow);\n`;\n\nexport const Wrapper = styled.div``;\n\nexport const Title = styled.h2`\n  margin-bottom: 45px;\n  font-weight: 700;\n  font-size: 36px;\n  color: var(--accent);\n  text-shadow: var(--main-shadow);\n`;\n\nexport const Year = styled.span`\n  font-weight: 200;\n  color: var(--secondary);\n`;\n\nexport const Description = styled.p`\n  margin-bottom: 15px;\n  font-size: 22px;\n  font-weight: 500;\n  color: var(--accent);\n`;\n\nexport const Text = styled.span`\n  font-weight: 300;\n  letter-spacing: 0.05em;\n  color: var(--secondary);\n`;","import { Container, Img, Title, Wrapper, Year, Description, Text } from './Card.styled';\n\nconst Card = ({ movie }) => {\n  const { poster_path, title, release_date, vote_average, overview, genres } = movie;\n\n  const imgBaseUrl = 'https://image.tmdb.org/t/p/w500/';\n  const imgUrl = imgBaseUrl.concat(poster_path);\n  const releaseDate = release_date.slice(0, 4);\n  const voteScore = vote_average.toFixed(1);\n  const genresList = genres.map(ganre => ganre.name).join(', ');\n\n  return (\n    <Container>\n      <Img src={imgUrl} alt=\"{title}\" width=\"350\" />\n      <Wrapper>\n        <Title>\n          {title} <Year>({releaseDate})</Year>\n        </Title>\n        <Description>\n          User score: <Text>{voteScore}</Text>\n        </Description>\n        <Description>\n          Overview: <Text>{overview}</Text>\n        </Description>\n        <Description>\n          Genres: <Text>{genresList}</Text>\n        </Description>\n      </Wrapper>\n    </Container>\n  );\n};\n\nexport default Card;","import { useState, useEffect, Suspense } from 'react';\nimport { useParams, Outlet, useLocation, Link, NavLink } from 'react-router-dom';\nimport { getMovieDetails } from 'services/API';\nimport Card from 'components/Card/Card';\n\nexport const MovieDetails = () => {\n  const [movieDetails, setMovieDetails] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  useEffect(() => {\n      getMovieDetails(movieId)\n          .then(({ results }) => {\n                setMovieDetails(results);\n           })\n           .catch(error => {\n                console.log(error);\n           });\n  }, [movieId]);\n\n  if (!movieDetails) {\n    return null;\n    };\n\n  const backLink = location.state?.from ?? '/';\n\n  return (\n    <>\n      <Link to={backLink}>‚Üê Go back</Link>\n      <Card movie={movieDetails} />\n      <>\n        <NavLink to={'cast'} state={{ from: backLink }}>\n          Cast\n        </NavLink>\n        <NavLink to={'reviews'} state={{ from: backLink }}>\n          Reviews\n        </NavLink>\n      </>\n\n      <Suspense>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","const URL = 'https://api.themoviedb.org/3';\nconst BASE_KEY = '4c022d061e1dc709d01d1f05bf0b4752';\n\nasync function apiService(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(\n        new Error('The resource you requested could not be found'),\n      );\n}\n\nexport function getTrendingMovies(page) {\n  return apiService(\n    `${URL}/trending/movie/day?api_key=${BASE_KEY}&page=${page}`,\n  );\n}\n\nexport function searchMovies(query) {\n  return apiService(\n    `${URL}/search/movie?api_key=${BASE_KEY}&query=${query}`,\n  );\n}\n\nexport function getMovieDetails(movieId) {\n  return apiService(`${URL}/movie/${movieId}?api_key=${BASE_KEY}`);\n}\n\nexport function getMovieCredits(movieId) {\n  return apiService(`${URL}/movie/${movieId}/credits?api_key=${BASE_KEY}`);\n}\n\nexport function getMovieReviews(movieId, page) {\n  return apiService(\n    `${URL}/movie/${movieId}/reviews?api_key=${BASE_KEY}&page=${page}`,\n  );\n}"],"names":["Container","styled","Img","Wrapper","Title","Year","Description","Text","movie","poster_path","title","release_date","vote_average","overview","genres","imgUrl","concat","releaseDate","slice","voteScore","toFixed","genresList","map","ganre","name","join","src","alt","width","MovieDetails","useState","movieDetails","setMovieDetails","movieId","useParams","location","useLocation","useEffect","getMovieDetails","then","results","catch","error","console","log","backLink","state","from","to","Suspense","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","URL","BASE_KEY","apiService","url","config","fetch","response","ok","json","Error","getTrendingMovies","page","searchMovies","query","getMovieCredits","getMovieReviews"],"sourceRoot":""}