{"version":3,"file":"static/js/12.23b337ad.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","components/SearchBar/SearchBar.styled.jsx","components/SearchBar/SearchBar.jsx","pages/Movies.jsx","services/API.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  margin-bottom: 40px;\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n  gap: 20px;\n`;\n\nexport const MovieItem = styled.li`\n  flex-basis: calc((100% - 100px) / 5);\n  max-height: 100%;\n  min-height: 390px;\n  border-radius: 8px;\n  overflow: hidden;\n  background-color: var(--bg);\n  box-shadow: var(--main-shadow);\n`;\n\nexport const MovieLink = styled(Link)`\n  object-fit: cover;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  height: 100%;\n\n  &:hover img {\n    filter: grayscale(0);\n  }\n\n  &:hover p {\n    color: var(--accent);\n  }\n`;\n\nexport const MovieImg = styled.img`\n  margin-bottom: 5px;\n  filter: grayscale(0.4);\n\n  transition: all 200ms ease-in-out;\n`;\n\nexport const MovieName = styled.p`\n  height: 100%;\n  padding: 10px 8px;\n  font-weight: 500;\n  font-size: 18px;\n  transition: all 200ms ease-in-out;\n`;","import { useLocation } from 'react-router-dom';\nimport { List, MovieItem, MovieLink, MovieImg, MovieName } from './MovieList.styled';\nimport PropTypes from 'prop-types';\n\nfunction MovieList ({ movies }) {\n  const location = useLocation();\n  const imgBaseUrl = 'https://image.tmdb.org/t/p/w500/';\n\n  return (\n    <>\n      <List>\n        {movies.map(({ id, title, original_name, poster_path }) => (\n          <MovieItem key={id}>\n            <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n              <MovieImg src={imgBaseUrl.concat(poster_path)} alt=\"\" />\n              <MovieName>{title ?? original_name}</MovieName>\n            </MovieLink>\n          </MovieItem>\n        ))}\n        </List>\n      </>\n  );\n}\n\nexport default MovieList;\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string,\n    original_name: PropTypes.string,\n    poster_path: PropTypes.string,\n  })).isRequired,\n};","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  margin-bottom: 20px;\n  display: flex;\n  gap: 20px;\n`;\n\nexport const Input = styled.input`\n  padding: 13px 20px;\n  width: 300px;\n  border-radius: 4px;\n\n  font-size: 18px;\n  color: #3d237f;\n\n  box-shadow: #674ea7;\n  border: 2px solid #250f5c;\n\n  :focus {\n    outline: 3px solid #674ea7;\n  }\n`;\n\nexport const Button = styled.button`\n  padding: 8px 14px;\n\n  font-weight: 700;\n  font-size: 22px;\n\n  border-radius: 4px;\n  border: 2px solid #250f5c;\n\n  color: #3d237f;\n  background-color: #d9d2e9;\n  box-shadow: #b4a7d6;\n\n  transition: all 200ms ease-in-out;\n  cursor: pointer;\n\n  :hover,\n  :focus-visible {\n    color: #d9d2e9;\n    background-color: #3d237f;\n  }\n\n  :focus {\n    outline: 3px solid var(--bg);\n    box-shadow: 0px 0px 0px 6px var(--accent);\n  }\n`;","import { Form, Input, Button } from './SearchBar.styled';\nimport PropTypes from 'prop-types';\n\nfunction SearchBar ({ onChange, onSubmit }) {\n  return (\n    <Form onSubmit={onSubmit}>\n      <Input type=\"text\" onChange={onChange} />\n\n      <Button type=\"submit\">Search</Button>\n    </Form>\n  );\n};\n\nexport default SearchBar;\n\nSearchBar.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { searchMovies } from 'services/API';\nimport SearchBar from 'components/SearchBar';\nimport MovieList from 'components/MovieList';\n\nfunction Movies() {\n    const [movies, setMovies] = useState([]);\n    const [query, setQuery] = useState('');\n    const [searchParams, setSearchParams] = useSearchParams();\n\n    useEffect(() => {\n        const query = searchParams.get('query') ?? '';\n        \n        if (!query) {\n            return;\n        };\n  \n        searchMovies(query)\n            .then(setMovies);   \n    }, [searchParams]);\n\n    const onInputChange = e => {\n        setQuery(e.target.value);\n    }\n\n    const onFormSubmit = e => {\n        e.preventDefault();\n\n        setSearchParams(query !== '' ? { query } : {});\n    };\n\n    return (\n        <>\n            <SearchBar onSubmit={onFormSubmit} onChange={onInputChange} />\n            <MovieList movies={movies} />\n        </>\n    );\n};\n\nexport default Movies;","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst BASE_KEY = '4c022d061e1dc709d01d1f05bf0b4752';\n\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`/trending/all/week?api_key=${BASE_KEY}`);\n  return data.results;\n};\n\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}?api_key=${BASE_KEY}`);\n  return data;\n};\n\nexport const searchMovies = async query => {\n  const { data } = await axios.get(`/search/movie?api_key=${BASE_KEY}&query=${query}`);\n  return data.results;\n};\n\nexport const getMovieCredits = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/credits?api_key=${BASE_KEY}`);\n  return data.cast;\n};\n\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/reviews?api_key=${BASE_KEY}`);\n  return data.results;\n};"],"names":["List","styled","MovieItem","MovieLink","Link","MovieImg","MovieName","movies","location","useLocation","map","id","title","original_name","poster_path","to","state","from","src","concat","alt","Form","Input","Button","onChange","onSubmit","type","useState","setMovies","query","setQuery","useSearchParams","searchParams","setSearchParams","useEffect","get","searchMovies","then","e","preventDefault","target","value","MovieList","axios","BASE_KEY","getTrendingMovies","data","results","getMovieDetails","movieId","getMovieCredits","cast","getMovieReviews"],"sourceRoot":""}